{
  "hash": "d8ac38276c6d23c79b0a33c382fc2948",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 1\"\nauthor: \"Lau Jia Yi\"\ndate: 3 May 2024\ndate-modified: \"last-modified\"\nformat: html\neditor: visual\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n# Singapore in 2024: A Visual Guide to our Population Landscape.\n\n## 1.0 Introduction\n\nSingapore’s population structure reveals a dynamic interplay between urban development, ageing, and youth distribution. Let's explore the demographic breakdown of 2024 through interactive charts.\n\n------------------------------------------------------------------------\n\n## 2.0 Loading R Packages and Dataset\n\n### 2.1 Libraries Required\n\nThe following R packages were used via `pacman::p_load()` to support data wrangling, visualization, and mapping for Singapore’s 2024 population data.\n\n| Package | Description | Official Link |\n|------------------------|------------------------|------------------------|\n| **`tidyverse`** | A collection of R packages (including `ggplot2`, `dplyr`, `readr`, etc.) for data manipulation, exploration, and visualization. It forms the foundation of modern R workflows. | [tidyverse.org](https://www.tidyverse.org/) |\n| **`ggthemes`** | Provides additional themes, color palettes, and formatting options for `ggplot2` charts, such as Economist, Wall Street Journal, and Tufte styles. | CRAN – ggthemes |\n| **`gghighlight`** | Simplifies highlighting specific data in `ggplot2` visualizations without manual filtering. Great for emphasizing trends. | [GitHub – gghighlight](https://github.com/yutannihilation/gghighlight) |\n| **`patchwork`** | Enables easy composition of multiple `ggplot2` plots into complex layouts. Very useful for dashboards or comparative plots. | patchwork.data-imaginist.com |\n| **`sf`** | Provides tools for handling and analyzing geospatial vector data using a `data.frame`-like structure. Compatible with the `tidyverse`. | R-Spatial – sf |\n| **`tmap`** | A flexible mapping package for creating static and interactive thematic maps from spatial data, built to work well with `sf`. | r-tmap.github.io |\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggthemes, gghighlight, ggrepel, patchwork,  sf, tmap, knitr, scales, colorspaces, ggh4x)\n```\n:::\n\n\n\n### 2.1 Loading the dataset\n\nThe dataset used is \"Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024\", it is shared by the Department of Statistics, Singapore (DOS).\n\nWe begin by loading the required libraries and reading the dataset using `readr::read_csv()` from the `tidyverse` collection:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read_csv(\"data/respopagesex2024.csv\")\n```\n:::\n\n\n\nThis dataset provides a snapshot of the resident population in Singapore as of June 2024, broken down by planning areas, subzones, age, and sex.\n\n#### **2.1.1 Column Descriptions**\n\n| Column | Description                                        |\n|--------|----------------------------------------------------|\n| `PA`   | Planning Area – As defined by URA Master Plan 2019 |\n| `SZ`   | Subzone – Subdivision within a planning area       |\n| `Age`  | Single Year of Age – From 0 to 100+                |\n| `Sex`  | Sex – \"Males\" or \"Females\"                         |\n| `Pop`  | Resident Count – Rounded to the nearest 10         |\n| `Time` | Reference Period                                   |\n\n#### 2.1.2 Notes from Source\n\n-   Residents who have been away from Singapore for more than **12 continuous months** are excluded.\n-   All population counts are **rounded to the nearest 10**, which may result in totals that do not sum exactly.\n-   The reference period for this dataset is **June 2024**.\n\n#### 2.1.3 Understanding the data\n\nBefore we proceed with visualisation, a few inspection and validation of the dataset will be performed.\n\n::: panel-tabset\n## Preview of Loaded dataset (Header)\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  PA         SZ                     Age   Sex       Pop  Time\n  <chr>      <chr>                  <chr> <chr>   <dbl> <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Centre 0     Males      10  2024\n2 Ang Mo Kio Ang Mo Kio Town Centre 0     Females    10  2024\n3 Ang Mo Kio Ang Mo Kio Town Centre 1     Males      10  2024\n4 Ang Mo Kio Ang Mo Kio Town Centre 1     Females    10  2024\n5 Ang Mo Kio Ang Mo Kio Town Centre 2     Males      10  2024\n6 Ang Mo Kio Ang Mo Kio Town Centre 2     Females    10  2024\n```\n\n\n:::\n:::\n\n\n\n## Preview of Loaded dataset (Glimpse)\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 60,424\nColumns: 6\n$ PA   <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  <chr> \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  <chr> \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time <dbl> 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n```\n\n\n:::\n:::\n\n\n:::\n\nThere are 60,424 rows noted with the 6 columns as stated in the source notes stated in earlier section 2.1.\n\nHowever the column Age has been loaded as a character type instead of double (numeric) variable as it includes a categorical label for the age group 90+ as \"90_and_Over\". This could be handled by converting this label into \"90\"together with an additional categorical label for this project.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read_csv(\"data/respopagesex2024.csv\",\n  col_types = cols(\n    Age = col_character()\n  )\n) %>%\n  rename(\n    Planning_Area = PA,\n    Subzone = SZ,\n    Population = Pop\n  ) %>%\n  mutate(\n    Age_Num = if_else(Age == \"90_and_Over\", 90L, as.integer(Age)),\n    AgeGroup = case_when(\n      Age_Num <= 14 ~ \"Children (0–14)\",\n      Age_Num <= 24 ~ \"Youth (15–24)\",\n      Age_Num <= 64 ~ \"Adults (25–64)\",\n      TRUE ~ \"Elderly (65+)\"\n    ),\n    AgeGroup = factor(\n      AgeGroup,\n      levels = c(\"Children (0–14)\", \"Youth (15–24)\", \"Adults (25–64)\", \"Elderly (65+)\")\n    ),\n    Region = case_when(\n      Planning_Area %in% c(\n        \"Ang Mo Kio\", \"Hougang\", \"Punggol\", \"Sengkang\", \"Serangoon\",\n        \"Seletar\", \"North-Eastern Islands\"\n      ) ~ \"North-East\",\n      Planning_Area %in% c(\n        \"Bedok\", \"Pasir Ris\", \"Tampines\", \"Changi\", \"Changi Bay\", \"Paya Lebar\"\n      ) ~ \"East\",\n      Planning_Area %in% c(\n        \"Bishan\", \"Bukit Merah\", \"Bukit Timah\", \"Downtown Core\", \"Geylang\", \"Kallang\",\n        \"Marine Parade\", \"Museum\", \"Newton\", \"Novena\", \"Orchard\", \"Outram\", \"Queenstown\",\n        \"River Valley\", \"Rochor\", \"Singapore River\", \"Southern Islands\", \"Straits View\",\n        \"Tanglin\", \"Toa Payoh\"\n      ) ~ \"Central\",\n      Planning_Area %in% c(\n        \"Boon Lay\", \"Bukit Batok\", \"Bukit Panjang\", \"Choa Chu Kang\", \"Clementi\", \"Jurong East\",\n        \"Jurong West\", \"Pioneer\", \"Tengah\", \"Tuas\", \"Western Islands\", \"Western Water Catchment\"\n      ) ~ \"West\",\n      Planning_Area %in% c(\n        \"Lim Chu Kang\", \"Mandai\", \"Sembawang\", \"Simpang\", \"Sungei Kadut\", \"Woodlands\",\n        \"Yishun\", \"Central Water Catchment\"\n      ) ~ \"North\",\n    )\n  )\n```\n:::\n\n\n\n::: panel-tabset\n## Preview of Updated Dataset (Header)\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 9\n  Planning_Area Subzone     Age   Sex   Population  Time Age_Num AgeGroup Region\n  <chr>         <chr>       <chr> <chr>      <dbl> <dbl>   <int> <fct>    <chr> \n1 Ang Mo Kio    Ang Mo Kio… 0     Males         10  2024       0 Childre… North…\n2 Ang Mo Kio    Ang Mo Kio… 0     Fema…         10  2024       0 Childre… North…\n3 Ang Mo Kio    Ang Mo Kio… 1     Males         10  2024       1 Childre… North…\n4 Ang Mo Kio    Ang Mo Kio… 1     Fema…         10  2024       1 Childre… North…\n5 Ang Mo Kio    Ang Mo Kio… 2     Males         10  2024       2 Childre… North…\n6 Ang Mo Kio    Ang Mo Kio… 2     Fema…         10  2024       2 Childre… North…\n```\n\n\n:::\n:::\n\n\n\n## Preview of Updated Dataset (Glimpse)\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 60,424\nColumns: 9\n$ Planning_Area <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", …\n$ Subzone       <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang…\n$ Age           <chr> \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"…\n$ Sex           <chr> \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Female…\n$ Population    <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, …\n$ Time          <dbl> 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 20…\n$ Age_Num       <int> 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9,…\n$ AgeGroup      <fct> Children (0–14), Children (0–14), Children (0–14), Child…\n$ Region        <chr> \"North-East\", \"North-East\", \"North-East\", \"North-East\", …\n```\n\n\n:::\n:::\n\n\n:::\n\n## 3.0 Visualisations\n\n### 3.1 Population Pyramid\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find the maximum age\nmax_age <- max(df$Age_Num)\n\n# Prepare the data for ggplot2\nplot_df <- df %>%\n# Group ages by 5-year intervals\nmutate(AgeGroup = cut(Age_Num,\n                      breaks = if (max_age > 90) {\n                        c(seq(0, 85, by = 5), 90, max_age + 1)\n                      } else {\n                        c(seq(0, 85, by = 5), max_age + 1)\n                      },\n                      right = FALSE,\n                      labels = if (max_age > 90) {\n                        c(\n                          paste0(seq(0, 80, by = 5), \"-\", seq(4, 84, by = 5)),\n                          \"90+\"\n                        )\n                      } else {\n                        c(\n                          paste0(seq(0, 80, by = 5), \"-\", seq(4, 84, by = 5)),\n                          \"Beyond 90\"\n                        )\n                      })) %>%\ngroup_by(AgeGroup, Sex) %>%\nsummarise(Population = sum(Population)) %>%\nungroup() %>%\nmutate(Population = ifelse(Sex == \"Males\", -Population, Population)) %>%\nmutate(PopulationAbs = abs(Population)) # Create absolute value for labels\n\n# Create the population pyramid using ggplot2\nggplot(plot_df, aes(x = AgeGroup, y = Population, fill = Sex)) +\n  geom_bar(stat = \"identity\", width = 0.90, color = \"black\") +\n  coord_flip() +\n  labs(\n    title = \"Singapore's Population Pyramid (2024) by 5-Year Age Groups\",\n    x = \"Age Group\",\n    y = \"Population Size\"\n  ) +\n  scale_y_continuous(\n    labels = function(x) format(abs(x), big.mark = \",\", scientific = FALSE),\n    limits = c(-200000, 200000),\n    breaks = seq(-200000, 200000, by = 50000)\n  ) +\n  scale_fill_manual(values = c(\"Females\" = \"#FFB6C1\", \"Males\" = \"#87CEFA\")) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5),\n    legend.position = \"bottom\",\n    axis.text.y = element_text(hjust = 0)\n  )\n```\n\n::: {.cell-output-display}\n![](takehome_ex01-v2_files/figure-html/unnamed-chunk-8-1.png){width=768}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find the maximum age\nmax_age <- max(df$Age_Num, na.rm = TRUE)\n\n# Prepare the data\nplot_df <- df %>%\n  mutate(\n    AgeGroup = cut(\n      Age_Num,\n      breaks = if (max_age > 90) {\n        c(seq(0, 85, by = 5), 90, max_age + 1)\n      } else {\n        c(seq(0, 85, by = 5), max_age + 1)\n      },\n      right = FALSE,\n      labels = if (max_age > 90) {\n        c(paste0(seq(0, 80, by = 5), \"-\", seq(4, 84, by = 5)), \"90+\")\n      } else {\n        c(paste0(seq(0, 80, by = 5), \"-\", seq(4, 84, by = 5)), \"90+\")\n      }\n    )\n  ) %>%\n  group_by(AgeGroup, Sex) %>%\n  summarise(Population = sum(Population), .groups = \"drop\") %>%\n  mutate(\n    Population = ifelse(Sex == \"Males\", -Population, Population),\n    PopulationAbs = abs(Population)\n  )\n\n# Plot\nggplot(plot_df, aes(x = AgeGroup, y = Population, fill = Sex)) +\n  geom_bar(stat = \"identity\", width = 0.90, color = \"black\") +\n  geom_text_repel(\n    aes(label = format(PopulationAbs, big.mark = \",\")),\n    size = 3,\n    direction = \"y\",\n    nudge_y = 15000 * sign(plot_df$Population),\n    hjust = 0.5,\n    segment.color = NA,\n    show.legend = FALSE\n  ) +\n  coord_flip() +\n  labs(\n    title = \"Singapore's Population Pyramid (2024) by 5-Year Age Groups\",\n    x = \"Age Group\",\n    y = \"Population Size\"\n  ) +\n  scale_y_continuous(\n    labels = function(x) format(abs(x), big.mark = \",\", scientific = FALSE),\n    limits = c(-200000, 200000),\n    breaks = seq(-200000, 200000, by = 50000),\n    minor_breaks = seq(-200000, 200000, by = 25000)\n  ) +\n  scale_fill_manual(\n    values = c(\"Males\" = \"#87CEFA\", \"Females\" = \"#FFB6C1\"),\n    breaks = c(\"Males\", \"Females\")\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5),\n    legend.position = \"bottom\",\n    axis.text.y = element_text(hjust = 0),\n    panel.grid.minor.x = element_line(color = \"grey85\", size = 0.3)\n  )\n```\n\n::: {.cell-output-display}\n![](takehome_ex01-v2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n## 3.x Density plot of Population\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Prepare the expanded dataset (same as before)\ndensity_df <- df %>%\n  filter(!is.na(Region), !is.na(Age_Num)) %>%\n  group_by(Region, Age_Num) %>%\n  summarise(Population = sum(Population), .groups = \"drop\") %>%\n  uncount(weights = Population)\n\n# Step 2: Calculate density peaks using base R's density()\ndensity_peaks <- density_df %>%\n  group_by(Region) %>%\n  summarise(\n    density_obj = list(density(Age_Num, kernel = \"gaussian\"))\n  ) %>%\n  rowwise() %>%\n  mutate(\n    peak_x = density_obj$x[which.max(density_obj$y)],\n    peak_y = max(density_obj$y),\n    label = paste0(\"Peak: Age \", round(peak_x))\n  ) %>%\n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot\nggplot(density_df, aes(x = Age_Num, fill = Region)) +\n  geom_density(alpha = 0.6, color = \"black\") +\n  ggrepel::geom_label_repel(\n    data = density_peaks,\n    aes(x = peak_x, y = peak_y, label = label, fill = Region),\n    color = \"black\",\n    size = 3,\n    box.padding = 0.3,\n    point.padding = 0.2,\n    max.overlaps = 10,\n    show.legend = FALSE,\n    nudge_y = -0.005\n  ) +\n  labs(\n    title = \"Age Distribution by Region (2024)\",\n    subtitle = \"Each region's curve is normalized. Labels show peak (most common) age.\",\n    x = \"Age\",\n    y = \"Relative Density (Normalized within Region)\",\n    fill = \"Region\"\n  ) +\n  scale_x_continuous(breaks = seq(0, 90, 10)) +\n  scale_fill_brewer(palette = \"Set2\") +\n  theme_classic() +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5),\n    legend.position = \"bottom\"\n  )\n```\n\n::: {.cell-output-display}\n![](takehome_ex01-v2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Create faceted dataset\ndensity_df_facet <- df %>%\n  filter(!is.na(Region), !is.na(Age_Num)) %>%\n  mutate(RegionFacet = Region) %>%      # preserve Region for per-facet filtering\n  bind_rows(\n    df %>%\n      filter(!is.na(Age_Num)) %>%\n      mutate(Region = Region, RegionFacet = \"Overall\")  # keep Region for color, \"Overall\" for facet\n  ) %>%\n  group_by(RegionFacet, Region, Age_Num) %>%\n  summarise(Population = sum(Population), .groups = \"drop\") %>%\n  uncount(weights = Population)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 2: Compute density peaks for each region/facet combination\ndensity_peaks_facet <- density_df_facet %>%\n  group_by(RegionFacet, Region) %>%\n  summarise(\n    density_obj = list(density(Age_Num, kernel = \"gaussian\")),\n    .groups = \"drop\"\n  ) %>%\n  rowwise() %>%\n  mutate(\n    peak_x = density_obj$x[which.max(density_obj$y)],\n    peak_y = max(density_obj$y),\n    label = paste0(\"Peak: Age \", round(peak_x))\n  ) %>%\n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndensity_df_facet$RegionFacet <- factor(\n  density_df_facet$RegionFacet,\n  levels = c(\"Overall\", \"Central\", \"East\", \"North-East\", \"North\", \"West\")\n)\n\ndensity_peaks_facet$RegionFacet <- factor(\n  density_peaks_facet$RegionFacet,\n  levels = c(\"Overall\", \"Central\", \"East\", \"North-East\", \"North\", \"West\")\n)\n\nggplot(density_df_facet, aes(x = Age_Num, fill = Region)) +\n  geom_density(alpha = 0.6, color = \"black\") +\n  ggrepel::geom_label_repel(\n    data = density_peaks_facet,\n    aes(x = peak_x, y = peak_y, label = label, fill = Region),\n    color = \"black\",\n    size = 3,\n    box.padding = 0.3,\n    point.padding = 0.2,\n    nudge_y = -0.004,\n    max.overlaps = 20,\n    show.legend = FALSE\n  ) +\n  labs(\n    title = \"Age Distribution (2024): Overall vs Individual Regions\",\n    subtitle = \"Overall facet shows all regions; other facets show individual region profiles\",\n    x = \"Age\",\n    y = \"Relative Density (Normalized within Region)\",\n    fill = \"Region\"\n  ) +\n  scale_x_continuous(breaks = seq(0, 90, 10)) +\n  scale_fill_brewer(palette = \"Set2\") +\n  facet_wrap(~ RegionFacet, ncol = 2, scales =\"fixed\", axes =\"all_x\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5, size = 14),\n    plot.subtitle = element_text(hjust = 0.5),\n    strip.text = element_text(face = \"bold\", size = 11),\n    legend.position = \"right\",\n    panel.grid.major.y = element_line(color = \"grey85\", size = 0.3),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.border = element_rect(color = \"grey50\", fill = NA, size = 0.8),\n    axis.text.y = element_text(size = 9),\n    axis.title.y = element_text(size = 10)\n  )\n```\n\n::: {.cell-output-display}\n![](takehome_ex01-v2_files/figure-html/unnamed-chunk-14-1.png){width=1440}\n:::\n:::\n\n\n\n\n## 3.x Bubble plot of Regions\n\nCreating the region summary dataset\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nregion_age_summary <- df %>%\n  filter(!is.na(Region)) %>%\n  group_by(Region) %>%\n  mutate(TotalRegionPop = sum(Population)) %>%\n  group_by(Region, AgeGroup) %>%\n  summarise(\n    Total_Pop = sum(Population),\n    Avg_Age = weighted.mean(Age_Num, w = Population),\n    Pct_Pop = sum(Population) / first(TotalRegionPop) * 100,\n    .groups = \"drop\"\n  ) %>%\n  mutate(\n    AgeGroup = factor(\n      AgeGroup,\n      levels = c(\"Elderly (65+)\", \"Adults (25–64)\", \"Youth (15–24)\", \"Children (0–14)\")\n    ),\n    label = paste0(round(Pct_Pop, 1), \"%\")\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot\nggplot(region_age_summary, aes(x = Total_Pop, y = Avg_Age, size = Total_Pop, fill = AgeGroup)) +\n  geom_point(shape = 21, color = \"black\", alpha = 0.8) +\n  scale_x_continuous(\n    labels = scales::label_comma(),\n    limits = c(0, 800000),\n    breaks = seq(0, 800000, by = 200000)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 90),\n    breaks = seq(0, 90, by = 10)\n  ) +\n  scale_size_continuous(range = c(10, 30), guide = \"none\") +\n  scale_fill_brewer(palette = \"Pastel1\") +\n  guides(\n    fill = guide_legend(override.aes = list(size = 6))  # Enlarge legend bubbles\n  ) +\n  facet_wrap(~ Region) +\n  labs(\n    title = \"Age Group Structure by Region (June 2024)\",\n    subtitle = \"Bubble size and x-position represent total population of each age group\",\n    x = \"Total Population (by Age Group)\",\n    y = \"Average Age\",\n    fill = \"Age Group\",\n    caption = \"Dataset: Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024 </br> Source: Department of Statistics, Singapore\"\n  ) +\n  geom_label_repel(\n    aes(label = label),\n    size = 3.5,\n    nudge_x = 180000,\n    nudge_y = 5,\n    show.legend = FALSE,\n    segment.color = \"grey90\",\n    box.padding = 0.35,\n    point.padding = 0.5,\n    min.segment.length = 0\n  ) +\n  theme_minimal() +\n  theme(\n    strip.text = element_text(size = 12, face = \"bold\"),\n    plot.title = element_text(size = 14, face = \"bold\"),\n    legend.title = element_text(size = 11),\n    legend.text = element_text(size = 10),\n    legend.key = element_rect(fill = NA),\n    panel.border = element_rect(color = \"grey\", fill = NA, size = 0.8)\n  )\n```\n\n::: {.cell-output-display}\n![](takehome_ex01-v2_files/figure-html/unnamed-chunk-16-1.png){width=1344}\n:::\n:::\n\n\n\n## 3.3\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Aggregate by Planning Area and Age Group in Central region\nwaffle_data <- df %>%\n  filter(Region == \"Central\") %>%\n  group_by(Planning_Area, AgeGroup) %>%\n  summarise(Pop = sum(Population, na.rm = TRUE), .groups = \"drop\") %>%\n  group_by(Planning_Area) %>%\n  mutate(\n    total = sum(Pop),\n    pct = round(Pop / total * 100),  # ensure it's numeric whole number\n    category = AgeGroup\n  ) %>%\n  filter(pct > 0) %>%  # eliminate 0s to prevent uncount error\n  ungroup() %>%\n  select(Planning_Area, category, pct)\n\n# Step 2: Expand to grid tiles (10x10)\nwaffle_expanded <- waffle_data %>%\n  uncount(pct) %>%\n  group_by(Planning_Area, category) %>%\n  mutate(\n    id = row_number() - 1,\n    x = id %% 10,\n    y = id %/% 10\n  ) %>%\n  ungroup()\n\n# Step 3: Plot waffle chart\nggplot(waffle_expanded, aes(x = x, y = y, fill = category)) +\n  geom_tile(color = \"white\", size = 0.5) +\n  coord_equal() +\n  facet_wrap(~ Planning_Area, ncol = 2) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(\n    title = \"Age Group Composition in Central Region (Waffle Charts)\",\n    subtitle = \"Each square represents ~1% of the Planning Area population\",\n    fill = \"Age Group\",\n    caption = \"Source: Department of Statistics, Singapore\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank(),\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    strip.text = element_text(size = 10, face = \"bold\"),\n    legend.position = \"bottom\"\n  )\n```\n\n::: {.cell-output-display}\n![](takehome_ex01-v2_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "takehome_ex01-v2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}